name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/companyapp:${{ github.sha }}
          docker build -t $IMAGE .
          docker push $IMAGE

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Kubernetes
        env:
          IMAGE: ${{ secrets.DOCKER_USERNAME }}/companyapp:${{ github.sha }}
        run: |
          # Apply configs & secrets first
          kubectl apply -f k8s/app-config.yaml
          kubectl apply -f k8s/app-secret.yaml

          # DB (apply once; later you usually don't re-apply each push)
          kubectl apply -f k8s/postgres-service.yaml
          kubectl apply -f k8s/postgres-deployment.yaml

          # App
          kubectl apply -f k8s/companyapp-service.yaml
          kubectl apply -f k8s/companyapp-deployment.yaml

          # Update image to the new SHA
          kubectl set image deployment/companyapp companyapp-container=$IMAGE

          # Wait for rollout
          kubectl rollout status deployment/companyapp --timeout=300s
