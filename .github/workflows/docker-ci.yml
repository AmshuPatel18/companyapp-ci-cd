name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/companyapp:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/companyapp:${{ github.sha }}

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Set up kubeconfig
        shell: powershell
        run: |
          $kubePath = "$HOME\.kube\config"
          # Create .kube folder if it doesn't exist
          New-Item -ItemType Directory -Force -Path (Split-Path $kubePath)
          # Write the kubeconfig from GitHub secret
          Set-Content -Path $kubePath -Value "${{ secrets.KUBECONFIG }}" -Force
      

      - name: Deploy to Kubernetes
        shell: powershell
        run: |
          # 1Ô∏è‚É£ Ensure kubeconfig
          $kubePath = "$HOME\.kube\config"
          New-Item -ItemType Directory -Force -Path (Split-Path $kubePath)
          Set-Content -Path $kubePath -Value "${{ secrets.KUBECONFIG }}" -Force

          # 2Ô∏è‚É£ Apply deployment YAML
          kubectl apply -f companyapp-deployment.yaml -n default

          # 3Ô∏è‚É£ Update container image dynamically
          kubectl set image deployment/companyapp companyapp-container=${{ secrets.DOCKER_USERNAME }}/companyapp:${{ github.sha }} -n default

          # 4Ô∏è‚É£ Wait for rollout and rollback if failed
          Write-Output "üöÄ Rolling out new version..."
          try {
              kubectl rollout status deployment/companyapp -n default --timeout=120s
          } catch {
              Write-Output "‚ùå Rollout failed. Rolling back..."
              kubectl rollout undo deployment/companyapp -n default
              exit 1
          }
